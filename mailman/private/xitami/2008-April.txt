From stanley.luk at lmco.com  Tue Apr 15 00:30:03 2008
From: stanley.luk at lmco.com (Luk, Stanley)
Date: Mon, 14 Apr 2008 16:30:03 -0600
Subject: [Xitami] FTP Command to Delete Multiple non-Empty Directories
Message-ID: <DFAB39F1F2CF164D9E00C5972A62E5A51E8352@emss02m22.us.lmco.com>

Hello,

 

I'm sort of shooting in the dark, not sure if this is an appropriate
place to ask this question. How do I delete (rmdir) multiple non-empty
directories within a specific parent directory? Thanks.

 

Regards,
Stanley

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.xitami.org/pipermail/xitami/attachments/20080414/0c063f5f/attachment.htm 

From marc at verfaillie.be  Tue Apr 15 10:29:17 2008
From: marc at verfaillie.be (Marc Doigny)
Date: Tue, 15 Apr 2008 10:29:17 +0200
Subject: [Xitami] FTP Command to Delete Multiple non-Empty Directories
In-Reply-To: <DFAB39F1F2CF164D9E00C5972A62E5A51E8352@emss02m22.us.lmco.com>
References: <DFAB39F1F2CF164D9E00C5972A62E5A51E8352@emss02m22.us.lmco.com>
Message-ID: <4804675D.3020909@verfaillie.be>

Hello Luk,
FTP has a very limited set of available commands.
It's not possible to remove more than one directory and it's not 
possible to remove a non-empty directory.

The only possible alternative is to use a FTP GUI (like a windows 
explorer shell) where you can perform your tasts and the application 
takes care of the FTP commands.

marc

Luk, Stanley wrote:
> Hello,
> 
>  
> 
> I?m sort of shooting in the dark, not sure if this is an appropriate 
> place to ask this question. How do I delete (rmdir) multiple non-empty 
> directories within a specific parent directory? Thanks.
> 
>  
> 
> Regards,
> Stanley
> 
> 
> ------------------------------------------------------------------------
> 
> 
> --
> Xitami Users Mailing List -- For Xitami support
> To unsubscribe: http://lists.xitami.org/mailman/listinfo/xitami


From jlist9 at gmail.com  Tue Apr 29 18:55:05 2008
From: jlist9 at gmail.com (Jack)
Date: Tue, 29 Apr 2008 09:55:05 -0700
Subject: [Xitami] xitami docs page returns 404
Message-ID: <746bb9e20804290955sc10cbe3wd3dfb47c383c3cc4@mail.gmail.com>

xitami manual page points to imatix and is returning a 404.
Could imatix help fix that?

Thanksk

From ewen at imatix.com  Wed Apr 30 04:21:23 2008
From: ewen at imatix.com (Ewen McNeill)
Date: Wed, 30 Apr 2008 14:21:23 +1200
Subject: [Xitami] xitami docs page returns 404
In-Reply-To: Message from Jack <jlist9@gmail.com> of "Tue,
	29 Apr 2008 09:55:05 MST."
	<746bb9e20804290955sc10cbe3wd3dfb47c383c3cc4@mail.gmail.com> 
Message-ID: <20080430022123.0D0F4112949@wat.la.naos.co.nz>

In message <746bb9e20804290955sc10cbe3wd3dfb47c383c3cc4 at mail.gmail.com>, Jack writes:
>xitami manual page points to imatix and is returning a 404.
>Could imatix help fix that?

There's supposed to be a redirect to the new location of the manual, but
it doesn't seem to be working for the exact URL linked to.  Someone is
investigating why.

Meanwhile the manual is still available here:

http://legacy.imatix.com/html/xitami/

Ewen

-- 
Ewen McNeill, System Administrator, iMatix Corporation  www.imatix.com

From jlist9 at gmail.com  Wed Apr 30 05:14:47 2008
From: jlist9 at gmail.com (Jack)
Date: Tue, 29 Apr 2008 20:14:47 -0700
Subject: [Xitami] xitami docs page returns 404
In-Reply-To: <20080430022123.0D0F4112949@wat.la.naos.co.nz>
References: <jlist9@gmail.com>
	<746bb9e20804290955sc10cbe3wd3dfb47c383c3cc4@mail.gmail.com>
	<20080430022123.0D0F4112949@wat.la.naos.co.nz>
Message-ID: <746bb9e20804292014o53d5bc5ay10e5eb4835787f6d@mail.gmail.com>

Thanks Ewen.

I actually didn't expect a reply - I thought no one was checking the list
because xitami development seems to have stopped for a while.
I'm quite happy that I??? a reply so soon :)

That was my first post on this list. I was looking for a reliable web
server for a production Windows server. I'd like to check with developers
and users to see if xitami is reliable enough for this purpose.

???, is development still going on? Still taking feature requests? :)

Thanks,
Jack

On Tue, Apr 29, 2008 at 7:21 PM, Ewen McNeill <ewen at imatix.com> wrote:
> In message <746bb9e20804290955sc10cbe3wd3dfb47c383c3cc4 at mail.gmail.com>, Jack writes:
>  >xitami manual page points to imatix and is returning a 404.
>  >Could imatix help fix that?
>
>  There's supposed to be a redirect to the new location of the manual, but
>  it doesn't seem to be working for the exact URL linked to.  Someone is
>  investigating why.
>
>  Meanwhile the manual is still available here:
>
>  http://legacy.imatix.com/html/xitami/
>
>  Ewen
>
>  --
>  Ewen McNeill, System Administrator, iMatix Corporation  www.imatix.com
>
>  --
>  Xitami Users Mailing List -- For Xitami support
>  To unsubscribe: http://lists.xitami.org/mailman/listinfo/xitami
>

From jlist9 at gmail.com  Wed Apr 30 08:34:06 2008
From: jlist9 at gmail.com (JLIST)
Date: Tue, 29 Apr 2008 23:34:06 -0700
Subject: [Xitami] Small modification to ISAPI support
Message-ID: <1889355728.20080429233406@gmail.com>

Among other things, Xitami's lack of URL rewriting feature
bothers me. So I made a couple of small changes to the ISAPI
add-on, basically adding a -i/-I option to show index.dll. When
no DLL file name is given in the URL, index.dll is used instead.
This makes it possible to have URLs like http://domain/register,
instead of http://domain/isapi_exe/register.dll

127a128
>     show_index     = FALSE;               /* Use index.dll if dll isn't in url */
346a348,350
>                 case 'I':               /* Alway unload ON                   */
>                 case 'i':
>                     show_index = TRUE;      break;
599a604,605
>     static char index[] = "index.dll";
> 
608a615,617
> 
>     if (show_index && (!strstr(path_info, ".dll")))
>         path_info = index;



From rolinger1 at hotmail.com  Wed Apr 30 18:30:52 2008
From: rolinger1 at hotmail.com (Russel Olinger)
Date: Wed, 30 Apr 2008 09:30:52 -0700
Subject: [Xitami] Small modification to ISAPI support
References: <1889355728.20080429233406@gmail.com>
Message-ID: <BAY127-DAV9E5B8CFDB944CA8532684F8D80@phx.gbl>


JLIST:  Could you explain that a bit more?  I get the gist of it but I 
assume you are also compiling our own Xitami and are able to modify the 
source.  For us non-compiled users I am not certain we can use that method.

So instead, I do my own version of URL rewrites through Xitami's CGI 
aliasing.  It works just fine and still provides you with all the necessary 
PATH_INFO and perl $ENV of the alias - not of the actual called script

Example:
/showArticle    /cgi-bin/postShow.pl

A URL example would be:
http://www.foo.com/showArticle/cars/classic/1965-Convertable-Corvette_12345.html

/showArticle calls the "/cgi-bin/poswShow.pl" script, in the script I parse 
the PATH_INFO environment variable to grab all the necessary ID info about 
the URL to call up the correct article.  In this case, "cars" and "classic" 
translate to category and forum IDs, then grab the actual article ID "12345" 
to call it up to the user.  Using the CGI alias method, the PATH_INFO 
environment variable is conveniently everything AFTER the /showArticle 
alias.

So PATH_INFO = /cars/classic/1965-Convertable-Corvette_12345.html
Parse everything on "/" into an array: @array = split(/\//,$PATH_INFO)
SPLICE the first empty element: splice @array,
Then split the last element for the article ID, the text of irrelevant, its 
only good for SEO stuff: @idInfo = split(/_/,$array[2]) ;
Remove the ".html" : $articleID = $idInfo[1] =~ s/\.html//;

Since I have never used Apache's mod_rewrite I don't know how much more 
laborious the above method is...but its really not that difficult, each 
script has to be slightly customized and you have to know what each part of 
the URL stands for, but if you logically plan it out you can achieve the 
whole thing pretty easy using just one called function to parse all your 
vars for you.  It also requires that for every script you want to do URL 
rewrites on, you must add a unique CGI alias for it.

Hope it helps.

----- Original Message ----- 
From: "JLIST" <jlist9 at gmail.com>
To: <Xitami at lists.xitami.org>
Sent: Tuesday, April 29, 2008 11:34 PM
Subject: [Xitami] Small modification to ISAPI support


> Among other things, Xitami's lack of URL rewriting feature
> bothers me. So I made a couple of small changes to the ISAPI
> add-on, basically adding a -i/-I option to show index.dll. When
> no DLL file name is given in the URL, index.dll is used instead.
> This makes it possible to have URLs like http://domain/register,
> instead of http://domain/isapi_exe/register.dll
>
> 127a128
>>     show_index     = FALSE;               /* Use index.dll if dll isn't 
>> in url */
> 346a348,350
>>                 case 'I':               /* Alway unload ON 
>> */
>>                 case 'i':
>>                     show_index = TRUE;      break;
> 599a604,605
>>     static char index[] = "index.dll";
>>
> 608a615,617
>>
>>     if (show_index && (!strstr(path_info, ".dll")))
>>         path_info = index;
>
>
>
> --
> Xitami Users Mailing List -- For Xitami support
> To unsubscribe: http://lists.xitami.org/mailman/listinfo/xitami
> 


From jlist9 at gmail.com  Wed Apr 30 21:07:01 2008
From: jlist9 at gmail.com (JLIST)
Date: Wed, 30 Apr 2008 12:07:01 -0700
Subject: [Xitami] Small modification to ISAPI support
In-Reply-To: <BAY127-DAV9E5B8CFDB944CA8532684F8D80@phx.gbl>
References: <1889355728.20080429233406@gmail.com>
	<BAY127-DAV9E5B8CFDB944CA8532684F8D80@phx.gbl>
Message-ID: <1308755108.20080430120701@gmail.com>

Hello Russel,

Sorr for not being clear. My change is for the ISAPI add-on listed
on the add-on page, not for xitami itself. Basically I need a high
performance mechanism to serve dynamic pages (so, no CGI) on Windows.
(I use FastCGI on Linux but that's not an option for Xitami.) I suppose
I'll need to use LRWP. I find that the ISAPI add-on allows me
to run ISAPI DLLs as LRWP and that ISAPI is easier to write than
a complete LRWP. I think I'll be writing some ISAPI DLLs instead.
But with the ISAPI add-on, it always shows the DLL name in the URL,
hence why my change to remove that.

I am new to xitami and I wasn't aware of CGI aliasing. Howerver,
it seems to work only for CGIs. I tried it with ISAPI add-on and
it didn't work. CGI aliasing doesn't really work the same way
URL rewriting does.

This didn't work:
/test  ->  /isapi_exe/testisapi.dll

URL rewriting (I use mod_rewrite on lighttpd on Linux) is more
generic and more flexible. You can specify a regular expression
to do the work (and more) that you described with the .pl CGI.
It works with all URLs (cgi, fastcgi, scgi, static files ...)
It also allows you to redirect all requests (/*) but some exceptions
(e.g. /images/*) to your app at, e.g. /myapp.

Jack

Wednesday, April 30, 2008, 9:30:52 AM, you wrote:


> JLIST:  Could you explain that a bit more?  I get the gist of it but I
> assume you are also compiling our own Xitami and are able to modify the
> source.  For us non-compiled users I am not certain we can use that method.

> So instead, I do my own version of URL rewrites through Xitami's CGI
> aliasing.  It works just fine and still provides you with all the necessary
> PATH_INFO and perl $ENV of the alias - not of the actual called script

> Example:
> /showArticle    /cgi-bin/postShow.pl

> A URL example would be:
> http://www.foo.com/showArticle/cars/classic/1965-Convertable-Corvette_12345.html

> /showArticle calls the "/cgi-bin/poswShow.pl" script, in the script I parse
> the PATH_INFO environment variable to grab all the necessary ID info about
> the URL to call up the correct article.  In this case, "cars" and "classic"
> translate to category and forum IDs, then grab the actual article ID "12345"
> to call it up to the user.  Using the CGI alias method, the PATH_INFO
> environment variable is conveniently everything AFTER the /showArticle
> alias.

> So PATH_INFO = /cars/classic/1965-Convertable-Corvette_12345.html
> Parse everything on "/" into an array: @array = split(/\//,$PATH_INFO)
> SPLICE the first empty element: splice @array,
> Then split the last element for the article ID, the text of irrelevant, its
> only good for SEO stuff: @idInfo = split(/_/,$array[2]) ;
> Remove the ".html" : $articleID = $idInfo[1] =~ s/\.html//;

> Since I have never used Apache's mod_rewrite I don't know how much more
> laborious the above method is...but its really not that difficult, each
> script has to be slightly customized and you have to know what each part of
> the URL stands for, but if you logically plan it out you can achieve the
> whole thing pretty easy using just one called function to parse all your
> vars for you.  It also requires that for every script you want to do URL
> rewrites on, you must add a unique CGI alias for it.

> Hope it helps.



From rolinger1 at hotmail.com  Wed Apr 30 21:49:37 2008
From: rolinger1 at hotmail.com (Russel Olinger)
Date: Wed, 30 Apr 2008 12:49:37 -0700
Subject: [Xitami] Small modification to ISAPI support
References: <1889355728.20080429233406@gmail.com>
	<BAY127-DAV9E5B8CFDB944CA8532684F8D80@phx.gbl>
	<1308755108.20080430120701@gmail.com>
Message-ID: <BAY127-DAV385AEE435C0FD0C97C112F8D80@phx.gbl>

Interesting.  For your example that didn't work, you might also be able to 
add an extension filter to your configuration file and it might 
work...though in the end your rewrite methods are probably much better.  But 
give it a shot and see if this works.

In the defaults.cfg file add a filter extension
[Filter]
    .php=c:\php\php.exe
    .pl=c:\perl\bin\perl.exe
    .shtm=perlssi
    .shtml=perlssi
    .ssi=perlssi
    .dll=\true\path\isapi.exe

and then in your CGI alias section do something like:
> /test  ->  /new/true/path/testisapi.dll

The alias will reference the .dll file, then the [filter] section should 
initiate the isapi.exe file.  In your examples, what exactly is isapi.exe 
and testiasapi.dll or register.dll doing?  I imagine isapi.exe is to *.dll 
as perl.exe is to *.pl.  But the .dll files you are using, they sound like 
MS OLE files...now that I think of it, if you get the above to work then 
there is a good chance the entire cgi alias step can be bypassed as the 
simple [filter] will provide all needed associations.  though the file would 
still need to have an extension of dll.

Without the cgi alias http://domain/register.dll should trigger the 
isapi.exe, but the dll would be needed.  However, I do believe the 
configuration is parsed, even in memory, sequentially... so you could 
literally put a .*=isapi.exe at the ed of the filter section gauranteeing 
that if another extension isn't matched first, then Xitami will default 
everything to .*=isapi.exe.

How much faster is ISAPI versus CGI - and what language are the dll's 
written in?  At least for me, this method you have described is new to me.

Let us know.

----- Original Message ----- 
From: "JLIST" <jlist9 at gmail.com>
To: "Russel Olinger" <rolinger1 at hotmail.com>; <xitami at lists.xitami.org>
Sent: Wednesday, April 30, 2008 12:07 PM
Subject: Re[2]: [Xitami] Small modification to ISAPI support


> Hello Russel,
>
> Sorr for not being clear. My change is for the ISAPI add-on listed
> on the add-on page, not for xitami itself. Basically I need a high
> performance mechanism to serve dynamic pages (so, no CGI) on Windows.
> (I use FastCGI on Linux but that's not an option for Xitami.) I suppose
> I'll need to use LRWP. I find that the ISAPI add-on allows me
> to run ISAPI DLLs as LRWP and that ISAPI is easier to write than
> a complete LRWP. I think I'll be writing some ISAPI DLLs instead.
> But with the ISAPI add-on, it always shows the DLL name in the URL,
> hence why my change to remove that.
>
> I am new to xitami and I wasn't aware of CGI aliasing. Howerver,
> it seems to work only for CGIs. I tried it with ISAPI add-on and
> it didn't work. CGI aliasing doesn't really work the same way
> URL rewriting does.
>
> This didn't work:
> /test  ->  /isapi_exe/testisapi.dll
>
> URL rewriting (I use mod_rewrite on lighttpd on Linux) is more
> generic and more flexible. You can specify a regular expression
> to do the work (and more) that you described with the .pl CGI.
> It works with all URLs (cgi, fastcgi, scgi, static files ...)
> It also allows you to redirect all requests (/*) but some exceptions
> (e.g. /images/*) to your app at, e.g. /myapp.
>
> Jack
>
> Wednesday, April 30, 2008, 9:30:52 AM, you wrote:
>
>
>> JLIST:  Could you explain that a bit more?  I get the gist of it but I
>> assume you are also compiling our own Xitami and are able to modify the
>> source.  For us non-compiled users I am not certain we can use that 
>> method.
>
>> So instead, I do my own version of URL rewrites through Xitami's CGI
>> aliasing.  It works just fine and still provides you with all the 
>> necessary
>> PATH_INFO and perl $ENV of the alias - not of the actual called script
>
>> Example:
>> /showArticle    /cgi-bin/postShow.pl
>
>> A URL example would be:
>> http://www.foo.com/showArticle/cars/classic/1965-Convertable-Corvette_12345.html
>
>> /showArticle calls the "/cgi-bin/poswShow.pl" script, in the script I 
>> parse
>> the PATH_INFO environment variable to grab all the necessary ID info 
>> about
>> the URL to call up the correct article.  In this case, "cars" and 
>> "classic"
>> translate to category and forum IDs, then grab the actual article ID 
>> "12345"
>> to call it up to the user.  Using the CGI alias method, the PATH_INFO
>> environment variable is conveniently everything AFTER the /showArticle
>> alias.
>
>> So PATH_INFO = /cars/classic/1965-Convertable-Corvette_12345.html
>> Parse everything on "/" into an array: @array = split(/\//,$PATH_INFO)
>> SPLICE the first empty element: splice @array,
>> Then split the last element for the article ID, the text of irrelevant, 
>> its
>> only good for SEO stuff: @idInfo = split(/_/,$array[2]) ;
>> Remove the ".html" : $articleID = $idInfo[1] =~ s/\.html//;
>
>> Since I have never used Apache's mod_rewrite I don't know how much more
>> laborious the above method is...but its really not that difficult, each
>> script has to be slightly customized and you have to know what each part 
>> of
>> the URL stands for, but if you logically plan it out you can achieve the
>> whole thing pretty easy using just one called function to parse all your
>> vars for you.  It also requires that for every script you want to do URL
>> rewrites on, you must add a unique CGI alias for it.
>
>> Hope it helps.
>
>
> 


From jlist9 at gmail.com  Wed Apr 30 22:13:06 2008
From: jlist9 at gmail.com (JLIST)
Date: Wed, 30 Apr 2008 13:13:06 -0700
Subject: [Xitami] Small modification to ISAPI support
In-Reply-To: <BAY127-DAV385AEE435C0FD0C97C112F8D80@phx.gbl>
References: <1889355728.20080429233406@gmail.com>
	<BAY127-DAV9E5B8CFDB944CA8532684F8D80@phx.gbl>
	<1308755108.20080430120701@gmail.com>
	<BAY127-DAV385AEE435C0FD0C97C112F8D80@phx.gbl>
Message-ID: <113397734.20080430131306@gmail.com>

Hello Russel,

> In the defaults.cfg file add a filter extension ...

I'll try this and report back. Thanks for the suggestion.

> How much faster is ISAPI versus CGI - and what language are the dll's
> written in?  At least for me, this method you have described is new to me.

ISAPI is very fast because it'll be just a function call in the same
Win32 process. Howerver, running ISAPI on Xitami has the overhead of
going through LRWP, which should still be fairly fast. All the
approaches (ISAPI, apache modules, LRWP, FastCGI, SCGI, AJP13) avoid
the overhead of starting a new process (in the CGI's case) and the
time the process needs for initialization. I don't have the numbers
but you should be able to find some numbers on the Net. The idea is
the same for LWRP/FCGI/SCGI/AJP, which is to use a long running
process.

I think you can write the DLL in any language that can be used to
write a DLL. I use VC++ or Delphi. This is another reason why ISAPI
is faster - the DLLs are usually written in compiled languages.

If xitami becomes my main server for Windows (I'm still evaluating),
I think I'll also use Python to write some LRWP. I've verified that
the Python module works. They'll usually still be much faster than
CGIs because the time it takes to process the request are much
shorter than the time for Windows to start a process. It takes time
and it taxes the server quite a bit to start processes. That's why
I generally stay away from CGI.

But I still miss FastCGI/SCGI a lot because, other than the advantages
that FastCGI has, I have developed some code that run as FCGI/SCGI
and there are a lot of web development frameworks that support these protocols.
I think it would be a great idea for xitami to support FCGI/SCGI.

Jack


From rolinger1 at hotmail.com  Wed Apr 30 22:51:58 2008
From: rolinger1 at hotmail.com (Russel Olinger)
Date: Wed, 30 Apr 2008 13:51:58 -0700
Subject: [Xitami] Small modification to ISAPI support
References: <1889355728.20080429233406@gmail.com>
	<BAY127-DAV9E5B8CFDB944CA8532684F8D80@phx.gbl>
	<1308755108.20080430120701@gmail.com>
	<BAY127-DAV385AEE435C0FD0C97C112F8D80@phx.gbl>
	<113397734.20080430131306@gmail.com>
Message-ID: <BAY127-DAV590E315B17D63A2EAB80FF8D80@phx.gbl>

Ah very cool...others might want to comment on the state/health of the LRWP 
module in Xitami.  Recently it was discovered that there is a bug in both 
the LRWP and FTP modules that prevents a user from launching two seperate 
instances of Xitami at the same time.  In the second instance of Xitami you 
must disable both LRWP and FTP as well as change their default ports to 
something different than the ones being used in the first instance of 
Xitami.  Everyone recommends that you disable the FTP anyway...it never 
worked well to begin with...but the multi-instance LRWP bug hopefully 
doesn't interfere with any of the ISAPI stuff you are attempting to do.

If you get this ISAPI to work with Xitami def let me know...I would be 
highly interested in getting it to work on mine server, however, I am a tad 
put off by having to convert all my perl to some other language - mostly 
because I don't know the other languages.  Even PHP on Xitami is a CGI 
process - not even true PHP.  I have always been aware of the CGI 
performance issue and have always wanted Xitami to support alternative 
methods - even pure PHP would be great.  But Xitami development stopped 
several years ago and even though we loyal Xitami users have tried to get 
iMatix to pick it up again it just hasn't panned out.

-Russel
----- Original Message ----- 
From: "JLIST" <jlist9 at gmail.com>
To: "Russel Olinger" <rolinger1 at hotmail.com>
Cc: <xitami at lists.xitami.org>
Sent: Wednesday, April 30, 2008 1:13 PM
Subject: Re[4]: [Xitami] Small modification to ISAPI support


> Hello Russel,
>
>> In the defaults.cfg file add a filter extension ...
>
> I'll try this and report back. Thanks for the suggestion.
>
>> How much faster is ISAPI versus CGI - and what language are the dll's
>> written in?  At least for me, this method you have described is new to 
>> me.
>
> ISAPI is very fast because it'll be just a function call in the same
> Win32 process. Howerver, running ISAPI on Xitami has the overhead of
> going through LRWP, which should still be fairly fast. All the
> approaches (ISAPI, apache modules, LRWP, FastCGI, SCGI, AJP13) avoid
> the overhead of starting a new process (in the CGI's case) and the
> time the process needs for initialization. I don't have the numbers
> but you should be able to find some numbers on the Net. The idea is
> the same for LWRP/FCGI/SCGI/AJP, which is to use a long running
> process.
>
> I think you can write the DLL in any language that can be used to
> write a DLL. I use VC++ or Delphi. This is another reason why ISAPI
> is faster - the DLLs are usually written in compiled languages.
>
> If xitami becomes my main server for Windows (I'm still evaluating),
> I think I'll also use Python to write some LRWP. I've verified that
> the Python module works. They'll usually still be much faster than
> CGIs because the time it takes to process the request are much
> shorter than the time for Windows to start a process. It takes time
> and it taxes the server quite a bit to start processes. That's why
> I generally stay away from CGI.
>
> But I still miss FastCGI/SCGI a lot because, other than the advantages
> that FastCGI has, I have developed some code that run as FCGI/SCGI
> and there are a lot of web development frameworks that support these 
> protocols.
> I think it would be a great idea for xitami to support FCGI/SCGI.
>
> Jack
>
> 


From jlist9 at gmail.com  Wed Apr 30 23:46:00 2008
From: jlist9 at gmail.com (JLIST)
Date: Wed, 30 Apr 2008 14:46:00 -0700
Subject: [Xitami] Small modification to ISAPI support
In-Reply-To: <BAY127-DAV590E315B17D63A2EAB80FF8D80@phx.gbl>
References: <1889355728.20080429233406@gmail.com>
	<BAY127-DAV9E5B8CFDB944CA8532684F8D80@phx.gbl>
	<1308755108.20080430120701@gmail.com>
	<BAY127-DAV385AEE435C0FD0C97C112F8D80@phx.gbl>
	<113397734.20080430131306@gmail.com>
	<BAY127-DAV590E315B17D63A2EAB80FF8D80@phx.gbl>
Message-ID: <1568037792.20080430144600@gmail.com>

> Xitami.  Everyone recommends that you disable the FTP anyway...it never
> worked well to begin with...but the multi-instance LRWP bug hopefully
> doesn't interfere with any of the ISAPI stuff you are attempting to do.

FTP server sounds useful to me in some occasions but I have other
means to transfer files to a Windows box.

I'm curious though, why people want to run multiple instances of
xitami? To use a different port?

> If you get this ISAPI to work with Xitami def let me know...I would be
> highly interested in getting it to work on mine server, however, I am a tad
> put off by having to convert all my perl to some other language - mostly
> because I don't know the other languages.  Even PHP on Xitami is a CGI
> process - not even true PHP.  I have always been aware of the CGI

Since you are familiar with scripting languages, I would suggest you
to take a look at Python. It's a very nicely designed language and
the Python LRWP module works (in my brief testing.)

> performance issue and have always wanted Xitami to support alternative
> methods - even pure PHP would be great.  But Xitami development stopped
> several years ago and even though we loyal Xitami users have tried to get
> iMatix to pick it up again it just hasn't panned out.

This is unfortunate.



From rolinger1 at hotmail.com  Wed Apr 30 23:56:00 2008
From: rolinger1 at hotmail.com (Russel Olinger)
Date: Wed, 30 Apr 2008 14:56:00 -0700
Subject: [Xitami] Small modification to ISAPI support
References: <1889355728.20080429233406@gmail.com>
	<BAY127-DAV9E5B8CFDB944CA8532684F8D80@phx.gbl>
	<1308755108.20080430120701@gmail.com>
	<BAY127-DAV385AEE435C0FD0C97C112F8D80@phx.gbl>
	<113397734.20080430131306@gmail.com>
	<BAY127-DAV590E315B17D63A2EAB80FF8D80@phx.gbl>
	<1568037792.20080430144600@gmail.com>
Message-ID: <BAY127-DAV1072142E7567BE37B6667FF8D80@phx.gbl>


> I'm curious though, why people want to run multiple instances of
> xitami? To use a different port?
>

basically to run on a different port...I have a mutli-IP'd NIC and run my 
production web server on one IP:port, and wish to run a second development 
web server on the same machine but on a seperate IP:port.  Xitami does 
support virtual hosts and so forth but I was finding it to confusing to 
recall which files I was working on and wished to completely seperate out 
development from production files.  Eventually I will be just moving all 
development onto a completely dedicated development machine...but that might 
not happen for a while.

>> If you get this ISAPI to work with Xitami def let me know...I would be
>> highly interested in getting it to work on mine server, however, I am a 
>> tad
>> put off by having to convert all my perl to some other language - mostly
>> because I don't know the other languages.  Even PHP on Xitami is a CGI
>> process - not even true PHP.  I have always been aware of the CGI
>
> Since you are familiar with scripting languages, I would suggest you
> to take a look at Python. It's a very nicely designed language and
> the Python LRWP module works (in my brief testing.)
>

I will look into it, thanks. 


